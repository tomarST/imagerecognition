{"ast":null,"code":"var _jsxFileName = \"/home/skylord/Documents/Projects/imagerecognition/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nconst app = new Clarifai.App({\n  apiKey: \"57ae1726336f40c097f3d14ece7e8392\"\n});\nconst parmOption = {\n  particles: {\n    number: {\n      value: 100\n    },\n    size: {\n      value: 3\n    }\n  }\n};\nconst initialState = {\n  draw: false,\n  box: [{\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  }],\n  inputUrl: \"\",\n  route: \"signin\",\n  isSignedIn: false,\n  users: {\n    id: 0,\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        users: data\n      });\n    };\n\n    this.onInput = event => {\n      this.setState({\n        draw: false,\n        box: [{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0\n        }],\n        inputUrl: event.target.value\n      });\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n\n      if (route === \"home\") {\n        this.setState({\n          isSignedIn: true,\n          route: route\n        });\n      } else {\n        this.setState(Object.assign({}, initialState, {\n          isSignedIn: false,\n          route: route\n        }));\n      }\n    };\n\n    this.calculateFaceLocation = e => {\n      const img = document.getElementById(\"inputImg\");\n      const width = Number(img.width);\n      const height = Number(img.height);\n\n      for (let i = 0; i < e.rawData.outputs[0].data.regions.length; i++) {\n        let top, left, bottom, right, ev;\n        ev = e.rawData.outputs[0].data.regions[i].region_info.bounding_box;\n        top = ev.top_row * height;\n        left = ev.left_col * width;\n        bottom = height - ev.bottom_row * height;\n        right = width - ev.right_col * width;\n\n        if (!i) {\n          this.setState({\n            box: [{\n              top: top,\n              left: left,\n              bottom: bottom,\n              right: right\n            }],\n            draw: true\n          });\n        } else {\n          this.setState(prevState => ({\n            box: [...prevState.box, {\n              top: top,\n              left: left,\n              bottom: bottom,\n              right: right\n            }],\n            draw: true\n          }));\n        }\n      }\n    };\n\n    this.onSubmit = event => {\n      let ref = this.state; // var res;\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.inputUrl).then(response => {\n        this.calculateFaceLocation(response);\n\n        if (response) {\n          async function updateEntres(url) {\n            try {\n              const response = await fetch(url, {\n                method: \"put\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  id: ref.users.id\n                })\n              });\n              let res = await response.json();\n              Object.assign(ref.users, {\n                entries: res\n              });\n            } catch (e) {\n              console.log(e);\n            }\n          }\n\n          updateEntres(\"https://warm-coast-03445.herokuapp.com/image\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.state = {\n      draw: false,\n      box: [{\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0\n      }],\n      inputUrl: \"\",\n      route: \"signin\",\n      isSignedIn: false,\n      users: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particleClass\",\n      params: parmOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"componentsC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      isSignedIn: this.state.isSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), this.state.route === \"signin\" ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), this.state.route === \"home\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Rank, {\n      name: this.state.users.name,\n      entries: this.state.users.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInput,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imgUrl: this.state.inputUrl,\n      boxD: this.state.box,\n      shouldD: this.state.draw,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), this.state.route === \"register\" ? React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/skylord/Documents/Projects/imagerecognition/src/App.js"],"names":["React","Component","Navigation","Logo","Rank","ImageLinkForm","Particles","Clarifai","FaceRecognition","SignIn","Register","app","App","apiKey","parmOption","particles","number","value","size","initialState","draw","box","top","left","bottom","right","inputUrl","route","isSignedIn","users","id","name","email","entries","joined","constructor","loadUser","data","setState","onInput","event","target","onRouteChange","Object","assign","calculateFaceLocation","e","img","document","getElementById","width","Number","height","i","rawData","outputs","regions","length","ev","region_info","bounding_box","top_row","left_col","bottom_row","right_col","prevState","onSubmit","ref","state","models","predict","FACE_DETECT_MODEL","then","response","updateEntres","url","fetch","method","headers","Accept","body","JSON","stringify","res","json","console","log","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Rank from \"./components/Rank/Rank\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nconst app = new Clarifai.App({\n  apiKey: \"57ae1726336f40c097f3d14ece7e8392\"\n});\nconst parmOption = {\n  particles: {\n    number: {\n      value: 100\n    },\n    size: {\n      value: 3\n    }\n  }\n};\nconst initialState = {\n  draw: false,\n  box: [{ top: 0, left: 0, bottom: 0, right: 0 }],\n  inputUrl: \"\",\n  route: \"signin\",\n  isSignedIn: false,\n  users: {\n    id: 0,\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      draw: false,\n      box: [{ top: 0, left: 0, bottom: 0, right: 0 }],\n      inputUrl: \"\",\n      route: \"signin\",\n      isSignedIn: false,\n      users: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        entries: 0,\n        joined: \"\"\n      }\n    };\n  }\n  loadUser = data => {\n    this.setState({ users: data });\n  };\n\n  onInput = event => {\n    this.setState({\n      draw: false,\n      box: [{ top: 0, left: 0, bottom: 0, right: 0 }],\n      inputUrl: event.target.value\n    });\n  };\n  onRouteChange = route => {\n    \n    this.setState({ route: route });\n    if (route === \"home\") {\n      this.setState({ isSignedIn: true, route: route });\n    } else {\n      this.setState(Object.assign({}, initialState, { isSignedIn: false,route:route }));\n    }\n  };\n  calculateFaceLocation = e => {\n    const img = document.getElementById(\"inputImg\");\n    const width = Number(img.width);\n    const height = Number(img.height);\n\n    for (let i = 0; i < e.rawData.outputs[0].data.regions.length; i++) {\n      let top, left, bottom, right, ev;\n      ev = e.rawData.outputs[0].data.regions[i].region_info.bounding_box;\n      top = ev.top_row * height;\n      left = ev.left_col * width;\n      bottom = height - ev.bottom_row * height;\n      right = width - ev.right_col * width;\n      if (!i) {\n        this.setState({\n          box: [{ top: top, left: left, bottom: bottom, right: right }],\n          draw: true\n        });\n      } else {\n        this.setState(prevState => ({\n          box: [\n            ...prevState.box,\n            { top: top, left: left, bottom: bottom, right: right }\n          ],\n          draw: true\n        }));\n      }\n    }\n  };\n  onSubmit = event => {\n    let ref = this.state;\n    // var res;\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.inputUrl)\n      .then(response => {\n        this.calculateFaceLocation(response);\n        if (response) {\n          async function updateEntres(url) {\n            try {\n              const response = await fetch(url, {\n                method: \"put\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  id: ref.users.id\n                })\n              });\n              let res = await response.json();\n              Object.assign(ref.users, { entries: res });\n            } catch (e) {\n              console.log(e);\n            }\n          }\n          updateEntres(\"https://warm-coast-03445.herokuapp.com/image\");\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particleClass\" params={parmOption} />\n        <div className=\"componentsC\">\n          <Navigation\n            onRouteChange={this.onRouteChange}\n            isSignedIn={this.state.isSignedIn}\n          />\n          <Logo />\n          {this.state.route === \"signin\" ? (\n            <SignIn\n              loadUser={this.loadUser}\n              onRouteChange={this.onRouteChange}\n            />\n          ) : (\n            <div />\n          )}\n          {this.state.route === \"home\" ? (\n            <div>\n              <Rank\n                name={this.state.users.name}\n                entries={this.state.users.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInput}\n                onSubmit={this.onSubmit}\n              />\n\n              <FaceRecognition\n                imgUrl={this.state.inputUrl}\n                boxD={this.state.box}\n                shouldD={this.state.draw}\n              />\n            </div>\n          ) : (\n            <div />\n          )}\n          {this.state.route === \"register\" ? (\n            <Register\n              loadUser={this.loadUser}\n              onRouteChange={this.onRouteChange}\n            />\n          ) : (\n            <div />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}